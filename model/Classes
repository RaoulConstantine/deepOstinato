
from typing_extensions import Self
from tensorflow.keras import Sequential, layers

class deepo():
    def __init__(self):
        pass

    def generator():
        generator = Sequential()
        generator.layers.Dense(1024*2930*1, input_shape=[100]),
        generator.layers.Reshape([1024,2930,1]),
        generator.layers.Conv2DTranspose(64, kernel_size = 5, strides =2, padding = 'same',activation = 'relu'),
        generator.layers.Conv2DTranspose(64, kernel_size = 5, strides =2, padding = 'same',activation = 'relu')
        return generator

    def discriminator():
        discriminator = Sequential()
        discriminator.layers.Conv2D(64, kernel_size = 5, strides =2, padding = 'same' ,activation = 'relu'),
        discriminator.layers.MaxPooling2D(pool_size=(2,2)),
        discriminator.layers.Dropout(0.4),
        discriminator.layers.Conv2D(64, kernel_size = 5, strides =2, padding = 'same' ,activation = 'relu'),
        discriminator.layers.Dropout(0.4),
        discriminator.layers.Flatten(),
        discriminator.layers.Dense(1, activation = 'sigmoid')
        return discriminator
